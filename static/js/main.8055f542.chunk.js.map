{"version":3,"sources":["api/JsonUtil.js","components/Result.js","components/Detail.js","api/ComponentUtil.js","components/Search.js","components/Filter.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["FIELD","NAME","DESC","AUTH","HTTPS","CORS","LINK","CATEGORY","buildParagraph","text","search","section","matched","RegExp","exec","react_default","a","createElement","className","match","spanList","prev","i","length","h","indexOf","t","push","buildSpan","buildSpanList","index","part","substring","key","Result","props","onClick","onRowClicked","children","ResultList","id","payload","filter","result","test","sectionsContainText","sort","r1","r2","s1","s2","toLowerCase","b","compareStrings","map","onRowClickedHandler","Result_Result","buildResultItem","Detail","onBackBtnClicked","href","target","rel","debounce","component","callBack","delay","arguments","undefined","state","timeout","clearTimeout","setState","setTimeout","VIEW","DETAIL","LIST","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","results","searchText","mode","populateList","bind","assertThisInitialized","_ref","host","path","url","concat","https","cors","authentication","category","fetch","buildQueryUrl","res","json","entries","_this2","getListOfAPI","_this3","type","placeholder","onKeyUp","event","value","src_components_Result","components_Detail","React","Component","Filter","options","label","Filter_CheckBox","defaultChecked","onValueChanged","onFiltersUpdated","Filter_Description","Filter_SelectList","defaultOptionValue","onChange","fn","CheckBox","checked","htmlFor","SelectList","selected","selectedOptions","option","Description","TabList","Control","activeTab","setActiveTab","tab","Control_Tabs","tabList","onTabSelected","Control_Content","global","Tabs","selectedTab","name","list","Control_Tab","tabName","onSelected","selectTab","generateTabList","Tab","Content","components_Filter","Control_Setting","onSettingsUpdated","setting","style","color","Setting","App","updateSearchFilters","field","Fragment","src_components_Search","src_components_Control","Boolean","window","location","hostname","ReactDOM","render","src_App_0","msg","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8055f542.chunk.js","sourcesContent":["const FIELD = {\r\n    NAME: 'API',\r\n    DESC: 'Description',\r\n    AUTH: 'Auth',\r\n    HTTPS: 'HTTPS',\r\n    CORS: 'Cors',\r\n    LINK: 'Link',\r\n    CATEGORY: 'Category'\r\n}\r\n\r\nexport default FIELD;","import './Result.css'\r\n// React requires this import\r\n// eslint-disable-next-line no-unused-vars\r\nimport React from 'react'\r\nimport FIELD from '../api/JsonUtil'\r\n\r\nconst ResultList = (props) => (\r\n    <div id=\"results\" className=\"card\">\r\n        <ul className=\"list-group list-group-flush\">\r\n            {props.payload ? props.payload.filter(result => sectionsContainText(result, props.search))\r\n                /* Sort by ascending API names */\r\n                .sort((r1, r2) => compareStrings(r1[FIELD.NAME], r2[FIELD.NAME]))\r\n                .map((result, i) => buildResultItem(result, i, props.search, props.onRowClicked)) : null}\r\n        </ul>\r\n    </div>\r\n);\r\n\r\n/**\r\n * \r\n * @param {String} s1 \r\n * @param {String} s2 \r\n */\r\nfunction compareStrings(s1, s2) {\r\n    let a = s1.toLowerCase(), b = s2.toLowerCase();\r\n    if (a < b) return -1;\r\n    else if (a > b) return 1;\r\n    else return 0;\r\n}\r\n\r\nfunction sectionsContainText(result, search) {\r\n    let matcher = new RegExp(search, 'gi');\r\n    return matcher.test(result[FIELD.NAME] + result[FIELD.DESC] + result[FIELD.CATEGORY]);\r\n}\r\n\r\nfunction buildResultItem(result, index, search, onRowClickedHandler) {\r\n    return <Result key={index} onRowClicked={() => onRowClickedHandler(result)}>\r\n        {buildParagraph(result[FIELD.NAME], search, 'title')}\r\n        {buildParagraph(result[FIELD.DESC], search, 'description')}\r\n        {buildParagraph(result[FIELD.CATEGORY], search, 'category')}\r\n    </Result>;\r\n}\r\n\r\nfunction buildParagraph(text, search, section) {\r\n    let matcher = new RegExp(search, 'gi');\r\n    let matched = matcher.exec(text);\r\n    return <p className={section}>{matched ? buildSpanList(text, matched) : text}</p>;\r\n}\r\n\r\nfunction buildSpanList(text, match) {\r\n    const spanList = [];\r\n    let prev = -1;\r\n    for (let i = 0; i < match.length; i++) {\r\n        let h = text.indexOf(match[i]);\r\n        let t = h + match[i].length - 1;\r\n        if (prev + 1 < h) {\r\n            spanList.push(buildSpan(text, false, prev + 1, h, spanList.length));\r\n        }\r\n        spanList.push(buildSpan(text, true, h, t + 1, spanList.length));\r\n        prev = t;\r\n    }\r\n    if (prev + 1 < text.length) {\r\n        spanList.push(buildSpan(text, false, prev + 1, text.length, spanList.length));\r\n    }\r\n    return spanList;\r\n}\r\n\r\nfunction buildSpan(text, matched, h, t, index) {\r\n    let part = text.substring(h, t);\r\n    return <span key={index} className={matched ? \"highlight\" : \"\"}>{part}</span>;\r\n}\r\n\r\nconst Result = (props) => (\r\n    <li className=\"list-group-item\">\r\n        <div className=\"result h-pane\" onClick={props.onRowClicked}>\r\n            {props.children}\r\n        </div>\r\n    </li>\r\n);\r\n\r\nexport default ResultList;","// React requires this import\r\n// eslint-disable-next-line no-unused-vars\r\nimport React from 'react'\r\nimport FIELD from '../api/JsonUtil'\r\n\r\nconst Detail = (props) => (\r\n    <div className=\"card\">\r\n        <div className=\"card-header\">\r\n            <button className=\"btn btn-primary\" onClick={props.onBackBtnClicked}>Back</button>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{props.result[FIELD.NAME]}</h5>\r\n            <p className=\"card-text\">{props.result[FIELD.DESC]}</p>\r\n            <table className=\"table table-striped\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Category</td>\r\n                        <td>{props.result[FIELD.CATEGORY]}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTTPS</td>\r\n                        <td>{props.result[FIELD.HTTPS] ? 'yes' : 'no'}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>CORS</td>\r\n                        <td>{props.result[FIELD.CORS]}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Authentication</td>\r\n                        <td>{props.result[FIELD.AUTH] !== '' ? props.result[FIELD.AUTH] : 'None'}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Link</td>\r\n                        <td>\r\n                            {/* See: https://mathiasbynens.github.io/rel-noopener} */}\r\n                            <a href={props.result[FIELD.LINK]} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {props.result[FIELD.LINK]}\r\n                            </a></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Detail;","/**\r\n * \r\n * @param {React.Component} component \r\n * @param {Function} callBack \r\n * @param {Number} delay \r\n */\r\nfunction debounce(component, callBack, delay = 1000) {\r\n    if (component.state.timeout) clearTimeout(component.state.timeout);\r\n    component.setState({\r\n        timeout: setTimeout(callBack, delay)\r\n    });\r\n}\r\n\r\nexport default debounce;","import React from 'react'\r\nimport './Search.css'\r\nimport ResultList from './Result'\r\nimport Detail from './Detail'\r\nimport debounce from '../api/ComponentUtil'\r\n\r\nconst API_URL = 'https://api.publicapis.org';\r\n\r\nconst VIEW = {\r\n    DETAIL: 'view_detail',\r\n    LIST: 'view_list',\r\n};\r\n\r\n// type-ahead delay\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: null,\r\n            result: null,\r\n            searchText: '',\r\n            mode: VIEW.LIST,\r\n            timeout: null\r\n        };\r\n        this.populateList = this.populateList.bind(this);\r\n    }\r\n    // load result list immediately\r\n    componentDidMount() {\r\n        this.populateList(this.props.filter, '');\r\n    }\r\n    // updates result list when filter settings have changed\r\n    componentWillReceiveProps({ filter }) {\r\n        this.populateList(filter, this.state.searchText);\r\n    }\r\n    // apply filter settings\r\n    buildQueryUrl(host, path, filter) {\r\n        let url = `${host}/${path}`;\r\n        url += `?https=${filter.https}`;\r\n        if (filter.cors) url += '&cors=yes';\r\n        if (filter.authentication !== 'none') url += `&auth=${filter.authentication}`;\r\n        if (filter.category) url += `&category=${filter.category}`;\r\n        return url;\r\n    }\r\n    async getListOfAPI(filter, text) {\r\n        // HTTP request to get json list\r\n        let res = await fetch(this.buildQueryUrl(API_URL, 'entries', filter));\r\n        let json = await res.json();\r\n        this.setState({ results: json.entries, searchText: text });\r\n    }\r\n    // applies debouncing to REST calls\r\n    populateList(filter, text) {\r\n        debounce(this, () => this.getListOfAPI(filter, text))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search\" className=\"v-pane\">\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"search-text\">Enter Text</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Type phrases to match title or description\" id=\"search-text\"\r\n                        onKeyUp={event => this.populateList(this.props.filter, event.target.value)}></input>\r\n                </div>\r\n                {\r\n                    // show details or list\r\n                    this.state.mode === VIEW.LIST ?\r\n                        <ResultList payload={this.state.results} search={this.state.searchText} onRowClicked={result => this.setState({ result: result, mode: VIEW.DETAIL })} />\r\n                        : <Detail result={this.state.result} onBackBtnClicked={() => this.setState({ mode: VIEW.LIST, result: null })} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Search;","// Specific Content Components\r\nimport React from 'react'\r\nimport debounce from '../api/ComponentUtil';\r\n\r\nclass Filter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = [\r\n            { label: 'Any Authentication', value: 'none' },\r\n            { label: 'API Key', value: 'apikey' },\r\n            { label: 'OAuth', value: 'oauth' }\r\n        ];\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <CheckBox label=\"HTTPS\" defaultChecked={this.props.filter.https} onValueChanged={value => this.props.onFiltersUpdated('https', value)} />\r\n                    <CheckBox label=\"CORS\" defaultChecked={this.props.filter.cors} onValueChanged={value => this.props.onFiltersUpdated('cors', value)} />\r\n                    <Description text=\"Filter on endpoints that are HTTPS/CORS enabled.\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <SelectList\r\n                        options={this.options}\r\n                        defaultOptionValue={this.props.filter.authentication}\r\n                        onValueChanged={value => this.props.onFiltersUpdated('authentication', value)}\r\n                    />\r\n                    <Description text=\"What type of authentication is required?\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"category-text\">Category</span>\r\n                        </div>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"text\" id=\"category-text\"\r\n                            value={this.props.filter.category}\r\n                            onChange={event => {\r\n                                let value = event.target.value;\r\n                                let fn = this.props.onFiltersUpdated('category', value);\r\n                                debounce(this, fn);\r\n                            }} />\r\n                    </div>\r\n                    <Description text=\"Include only this category. Not case sensitive.\" />\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n// Specific Form Components\r\nconst CheckBox = (props) => (\r\n    <div className=\"form-check form-check-inline\">\r\n        <input className=\"form-check-input\" checked={props.defaultChecked} type=\"checkbox\" id={props.label} onChange={(event) => props.onValueChanged(event.target.checked)} />\r\n        <label className=\"form-check-label\" htmlFor={props.label}>{props.label}</label>\r\n    </div>\r\n);\r\n\r\nconst SelectList = (props) => (\r\n    <select value={props.defaultOptionValue} className=\"form-control custom-select\" onChange={event => {\r\n        const list = event.target;\r\n        const selected = list.selectedOptions[0].value; // can only select up to 1 option\r\n        props.onValueChanged(selected);\r\n    }}>\r\n        {props.options.map((option, index) => <option key={index} value={option.value}>{option.label}</option>)}\r\n    </select>\r\n);\r\n\r\nconst Description = (props) => (\r\n    <small className=\"form-text text-muted\">{props.text}</small>\r\n);\r\n\r\nexport default Filter;","import './Control.css'\r\nimport React from 'react'\r\nimport Filter from './Filter'\r\n\r\n// Tabs\r\nconst FILTER = 'Filter';\r\nconst SETTING = 'Setting';\r\nconst TabList = [FILTER, SETTING];\r\n\r\n// Control Pane that wraps around tabs and their content\r\nclass Control extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: TabList[0]\r\n        }\r\n        this.setActiveTab = this.setActiveTab.bind(this);\r\n    }\r\n\r\n    setActiveTab(tab) {\r\n        this.setState({ activeTab: tab });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"control\" className=\"v-pane\">\r\n                <Tabs tabList={TabList} onTabSelected={this.setActiveTab} />\r\n                <Content activeTab={this.state.activeTab} onFiltersUpdated={this.props.onFiltersUpdated} global={this.props.global} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Tab components\r\nclass Tabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTab: props.tabList[0]\r\n        };\r\n    }\r\n    selectTab(name) {\r\n        this.props.onTabSelected(name);\r\n        this.setState({ selectedTab: name });\r\n    }\r\n    generateTabList(list) {\r\n        return list.map((name, i) => <Tab\r\n            key={i}\r\n            tabName={name}\r\n            selectedTab={this.state.selectedTab}\r\n            onSelected={() => this.selectTab(name)}\r\n        />);\r\n    }\r\n    render() {\r\n        return (\r\n            <ul className=\"nav nav-tabs\">\r\n                {this.generateTabList(this.props.tabList)}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nconst Tab = (props) => (\r\n    <li className=\"nav-item\">\r\n        <button className={`nav-link ${props.selectedTab === props.tabName ? 'active' : ''}`}\r\n            onClick={() => props.onSelected(props.tabName)}\r\n        >{props.tabName}</button>\r\n    </li>\r\n);\r\n\r\n// Tab Contents\r\nconst Content = (props) => {\r\n    switch (props.activeTab) {\r\n        case FILTER:\r\n            return <Filter onFiltersUpdated={props.onFiltersUpdated} filter={props.global.filter} />;\r\n        case SETTING:\r\n            return <Setting onSettingsUpdated={props.onSettingsUpdated} setting={props.global.setting} />;\r\n        default:\r\n            return (\r\n                <div>\r\n                    <h3 style={{ color: 'red' }}>Unable to display content.</h3>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nconst Setting = () => (\r\n    <div>\r\n        <p>Setting under construction.</p>\r\n    </div>\r\n);\r\n\r\nexport default Control;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Search from './components/Search'\r\nimport Control from './components/Control'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // global state\r\n    // should be passed down to all components under App\r\n    this.state = {\r\n      filter: {\r\n        https: true,\r\n        cors: false,\r\n        authentication: 'none',\r\n        category: ''\r\n      },\r\n      setting: {}\r\n    };\r\n    // bind callbacks to App context\r\n    this.updateSearchFilters = this.updateSearchFilters.bind(this);\r\n  }\r\n\r\n  updateSearchFilters(field, value) {\r\n    this.setState((state) => {\r\n      state.filter[field] = value;\r\n      return state;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Search filter={this.state.filter} />\r\n        <Control onFiltersUpdated={this.updateSearchFilters} global={this.state} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App msg=\"hey there\" />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
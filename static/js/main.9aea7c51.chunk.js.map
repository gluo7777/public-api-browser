{"version":3,"sources":["api/JsonUtil.js","components/Result.js","api/GeneralUtil.js","components/Detail.js","api/ComponentUtil.js","components/Search.js","components/Filter.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["FIELD","NAME","DESC","AUTH","HTTPS","CORS","LINK","CATEGORY","ResultList","result","search","RegExp","test","index","onRowClickedHandler","react_default","a","createElement","Result_Result","key","onRowClicked","Result_Section","section","text","_this","this","id","className","props","payload","filter","sectionsContainText","sort","r1","r2","s1","s2","toLowerCase","b","Util","map","i","buildResultItem","React","Component","Section","match","spanList","prev","length","h","indexOf","t","push","buildSpan","matched","part","substring","exec","buildSpanList","Result","onClick","children","Detail","onBackBtnClicked","href","target","rel","debounce","component","callBack","delay","arguments","undefined","state","timeout","clearTimeout","setState","setTimeout","VIEW","DETAIL","LIST","Search","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","results","searchText","mode","populateList","bind","assertThisInitialized","_ref","host","path","url","concat","https","cors","authentication","category","fetch","buildQueryUrl","res","json","entries","_this2","getListOfAPI","_this3","type","placeholder","onKeyUp","event","value","Result_ResultList","components_Detail","Filter","options","label","Filter_CheckBox","defaultChecked","onValueChanged","onFiltersUpdated","Filter_Description","Filter_SelectList","defaultOptionValue","onChange","fn","CheckBox","checked","htmlFor","SelectList","selected","selectedOptions","option","Description","TabList","Control","activeTab","setActiveTab","tab","Control_Tabs","tabList","onTabSelected","Control_Content","global","Tabs","selectedTab","name","list","Control_Tab","tabName","onSelected","selectTab","generateTabList","Tab","Content","components_Filter","Control_Setting","onSettingsUpdated","setting","style","color","Setting","App","updateSearchFilters","field","Fragment","src_components_Search","src_components_Control","Boolean","window","location","hostname","ReactDOM","render","src_App_0","msg","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9aea7c51.chunk.js","sourcesContent":["const FIELD = {\n    NAME: 'API',\n    DESC: 'Description',\n    AUTH: 'Auth',\n    HTTPS: 'HTTPS',\n    CORS: 'Cors',\n    LINK: 'Link',\n    CATEGORY: 'Category'\n}\n\nexport default FIELD;","import './Result.css'\n// React requires this import\n// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport FIELD from '../api/JsonUtil'\nimport * as Util from '../api/GeneralUtil'\n\nclass ResultList extends React.Component {\n    sectionsContainText(result, search) {\n        let matcher = new RegExp(search, 'gi');\n        return matcher.test(result[FIELD.NAME] + result[FIELD.DESC] + result[FIELD.CATEGORY]);\n    }\n    buildResultItem(result, index, search, onRowClickedHandler) {\n        return <Result key={index} onRowClicked={() => onRowClickedHandler(result)}>\n            <Section section={'title'} text={result[FIELD.NAME]} search={search} />\n            <Section section={'description'} text={result[FIELD.DESC]} search={search} />\n            <Section section={'category'} text={result[FIELD.CATEGORY]} search={search} />\n        </Result>;\n    }\n    render() {\n        return <div id=\"results\" className=\"card\">\n            <ul className=\"list-group list-group-flush\">\n                {this.props.payload ? this.props.payload.filter(result => this.sectionsContainText(result, this.props.search))\n                    /* Sort by ascending API names */\n                    .sort((r1, r2) => Util.compareStrings(r1[FIELD.NAME], r2[FIELD.NAME]))\n                    .map((result, i) => this.buildResultItem(result, i, this.props.search, this.props.onRowClicked)) : null}\n            </ul>\n        </div>;\n    }\n}\n\nclass Section extends React.Component {\n    buildSpanList(text, match) {\n        const spanList = [];\n        let prev = -1;\n        for (let i = 0; i < match.length; i++) {\n            let h = text.indexOf(match[i]);\n            let t = h + match[i].length - 1;\n            if (prev + 1 < h) {\n                spanList.push(this.buildSpan(text, false, prev + 1, h, spanList.length));\n            }\n            spanList.push(this.buildSpan(text, true, h, t + 1, spanList.length));\n            prev = t;\n        }\n        if (prev + 1 < text.length) {\n            spanList.push(this.buildSpan(text, false, prev + 1, text.length, spanList.length));\n        }\n        return spanList;\n    }\n    buildSpan(text, matched, h, t, index) {\n        let part = text.substring(h, t);\n        return <span key={index} className={matched ? \"highlight\" : \"\"}>{part}</span>;\n    }\n    render() {\n        let matcher = new RegExp(this.props.search, 'gi');\n        let matched = matcher.exec(this.props.text);\n        return <p className={this.props.section}>\n            {matched ? this.buildSpanList(this.props.text, matched) : this.props.text}\n        </p>;\n    }\n}\n\nconst Result = (props) => (\n    <li className=\"list-group-item\">\n        <div className=\"result h-pane\" onClick={props.onRowClicked}>\n            {props.children}\n        </div>\n    </li>\n);\n\nexport { Result, ResultList };","/**\n * \n * @param {String} s1 \n * @param {String} s2 \n */\nexport function compareStrings(s1, s2) {\n    let a = s1.toLowerCase(), b = s2.toLowerCase();\n    if (a < b) return -1;\n    else if (a > b) return 1;\n    else return 0;\n}\n","// React requires this import\n// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport FIELD from '../api/JsonUtil'\n\nconst Detail = (props) => (\n    <div className=\"card\">\n        <div className=\"card-header\">\n            <button className=\"btn btn-primary\" onClick={props.onBackBtnClicked}>Back</button>\n        </div>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.result[FIELD.NAME]}</h5>\n            <p className=\"card-text\">{props.result[FIELD.DESC]}</p>\n            <table className=\"table table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Category</td>\n                        <td>{props.result[FIELD.CATEGORY]}</td>\n                    </tr>\n                    <tr>\n                        <td>HTTPS</td>\n                        <td>{props.result[FIELD.HTTPS] ? 'yes' : 'no'}</td>\n                    </tr>\n                    <tr>\n                        <td>CORS</td>\n                        <td>{props.result[FIELD.CORS]}</td>\n                    </tr>\n                    <tr>\n                        <td>Authentication</td>\n                        <td>{props.result[FIELD.AUTH] !== '' ? props.result[FIELD.AUTH] : 'None'}</td>\n                    </tr>\n                    <tr>\n                        <td>Link</td>\n                        <td>\n                            {/* See: https://mathiasbynens.github.io/rel-noopener} */}\n                            <a href={props.result[FIELD.LINK]} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {props.result[FIELD.LINK]}\n                            </a></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n);\n\nexport default Detail;","/**\n * \n * @param {React.Component} component \n * @param {Function} callBack \n * @param {Number} delay \n */\nfunction debounce(component, callBack, delay = 1000) {\n    if (component.state.timeout) clearTimeout(component.state.timeout);\n    component.setState({\n        timeout: setTimeout(callBack, delay)\n    });\n}\n\nexport default debounce;","import React from 'react'\nimport './Search.css'\nimport { ResultList } from './Result'\nimport Detail from './Detail'\nimport debounce from '../api/ComponentUtil'\n\nconst API_URL = 'https://api.publicapis.org';\n\nconst VIEW = {\n    DETAIL: 'view_detail',\n    LIST: 'view_list',\n};\n\n// type-ahead delay\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: null,\n            result: null,\n            searchText: '',\n            mode: VIEW.LIST,\n            timeout: null\n        };\n        this.populateList = this.populateList.bind(this);\n    }\n    // load result list immediately\n    componentDidMount() {\n        this.populateList(this.props.filter, '');\n    }\n    // updates result list when filter settings have changed\n    componentWillReceiveProps({ filter }) {\n        this.populateList(filter, this.state.searchText);\n    }\n    // apply filter settings\n    buildQueryUrl(host, path, filter) {\n        let url = `${host}/${path}`;\n        url += `?https=${filter.https}`;\n        if (filter.cors) url += '&cors=yes';\n        if (filter.authentication !== 'none') url += `&auth=${filter.authentication}`;\n        if (filter.category) url += `&category=${filter.category}`;\n        return url;\n    }\n    async getListOfAPI(filter, text) {\n        // HTTP request to get json list\n        let res = await fetch(this.buildQueryUrl(API_URL, 'entries', filter));\n        let json = await res.json();\n        this.setState({ results: json.entries, searchText: text });\n    }\n    // applies debouncing to REST calls\n    populateList(filter, text) {\n        debounce(this, () => this.getListOfAPI(filter, text))\n    }\n\n    render() {\n        return (\n            <div id=\"search\" className=\"v-pane\">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"search-text\">Enter Text</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Type phrases to match title or description\" id=\"search-text\"\n                        onKeyUp={event => this.populateList(this.props.filter, event.target.value)}></input>\n                </div>\n                {\n                    // show details or list\n                    this.state.mode === VIEW.LIST ?\n                        <ResultList payload={this.state.results} search={this.state.searchText} onRowClicked={result => this.setState({ result: result, mode: VIEW.DETAIL })} />\n                        : <Detail result={this.state.result} onBackBtnClicked={() => this.setState({ mode: VIEW.LIST, result: null })} />\n                }\n            </div>\n        );\n    }\n}\nexport default Search;","// Specific Content Components\nimport React from 'react'\nimport debounce from '../api/ComponentUtil';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.options = [\n            { label: 'Any Authentication', value: 'none' },\n            { label: 'API Key', value: 'apikey' },\n            { label: 'OAuth', value: 'oauth' }\n        ];\n        this.state = {};\n    }\n    render() {\n        return (\n            <form>\n                <div className=\"form-group\">\n                    <CheckBox label=\"HTTPS\" defaultChecked={this.props.filter.https} onValueChanged={value => this.props.onFiltersUpdated('https', value)} />\n                    <CheckBox label=\"CORS\" defaultChecked={this.props.filter.cors} onValueChanged={value => this.props.onFiltersUpdated('cors', value)} />\n                    <Description text=\"Filter on endpoints that are HTTPS/CORS enabled.\" />\n                </div>\n                <div className=\"form-group\">\n                    <SelectList\n                        options={this.options}\n                        defaultOptionValue={this.props.filter.authentication}\n                        onValueChanged={value => this.props.onFiltersUpdated('authentication', value)}\n                    />\n                    <Description text=\"What type of authentication is required?\" />\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"category-text\">Category</span>\n                        </div>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"text\" id=\"category-text\"\n                            value={this.props.filter.category}\n                            onChange={event => {\n                                let value = event.target.value;\n                                let fn = this.props.onFiltersUpdated('category', value);\n                                debounce(this, fn);\n                            }} />\n                    </div>\n                    <Description text=\"Include only this category. Not case sensitive.\" />\n                </div>\n            </form>\n        );\n    }\n}\n\n// Specific Form Components\nconst CheckBox = (props) => (\n    <div className=\"form-check form-check-inline\">\n        <input className=\"form-check-input\" checked={props.defaultChecked} type=\"checkbox\" id={props.label} onChange={(event) => props.onValueChanged(event.target.checked)} />\n        <label className=\"form-check-label\" htmlFor={props.label}>{props.label}</label>\n    </div>\n);\n\nconst SelectList = (props) => (\n    <select value={props.defaultOptionValue} className=\"form-control custom-select\" onChange={event => {\n        const list = event.target;\n        const selected = list.selectedOptions[0].value; // can only select up to 1 option\n        props.onValueChanged(selected);\n    }}>\n        {props.options.map((option, index) => <option key={index} value={option.value}>{option.label}</option>)}\n    </select>\n);\n\nconst Description = (props) => (\n    <small className=\"form-text text-muted\">{props.text}</small>\n);\n\nexport default Filter;","import './Control.css'\nimport React from 'react'\nimport Filter from './Filter'\n\n// Tabs\nconst FILTER = 'Filter';\nconst SETTING = 'Setting';\nconst TabList = [FILTER, SETTING];\n\n// Control Pane that wraps around tabs and their content\nclass Control extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: TabList[0]\n        }\n        this.setActiveTab = this.setActiveTab.bind(this);\n    }\n\n    setActiveTab(tab) {\n        this.setState({ activeTab: tab });\n    }\n\n    render() {\n        return (\n            <div id=\"control\" className=\"v-pane\">\n                <Tabs tabList={TabList} onTabSelected={this.setActiveTab} />\n                <Content activeTab={this.state.activeTab} onFiltersUpdated={this.props.onFiltersUpdated} global={this.props.global} />\n            </div>\n        );\n    }\n}\n\n// Tab components\nclass Tabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: props.tabList[0]\n        };\n    }\n    selectTab(name) {\n        this.props.onTabSelected(name);\n        this.setState({ selectedTab: name });\n    }\n    generateTabList(list) {\n        return list.map((name, i) => <Tab\n            key={i}\n            tabName={name}\n            selectedTab={this.state.selectedTab}\n            onSelected={() => this.selectTab(name)}\n        />);\n    }\n    render() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                {this.generateTabList(this.props.tabList)}\n            </ul>\n        );\n    }\n}\n\nconst Tab = (props) => (\n    <li className=\"nav-item\">\n        <button className={`nav-link ${props.selectedTab === props.tabName ? 'active' : ''}`}\n            onClick={() => props.onSelected(props.tabName)}\n        >{props.tabName}</button>\n    </li>\n);\n\n// Tab Contents\nconst Content = (props) => {\n    switch (props.activeTab) {\n        case FILTER:\n            return <Filter onFiltersUpdated={props.onFiltersUpdated} filter={props.global.filter} />;\n        case SETTING:\n            return <Setting onSettingsUpdated={props.onSettingsUpdated} setting={props.global.setting} />;\n        default:\n            return (\n                <div>\n                    <h3 style={{ color: 'red' }}>Unable to display content.</h3>\n                </div>\n            );\n    }\n}\n\nconst Setting = () => (\n    <div>\n        <p>Setting under construction.</p>\n    </div>\n);\n\nexport default Control;","import React, { Component } from 'react';\nimport './App.css';\nimport Search from './components/Search'\nimport Control from './components/Control'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // global state\n    // should be passed down to all components under App\n    this.state = {\n      filter: {\n        https: true,\n        cors: false,\n        authentication: 'none',\n        category: ''\n      },\n      setting: {}\n    };\n    // bind callbacks to App context\n    this.updateSearchFilters = this.updateSearchFilters.bind(this);\n  }\n\n  updateSearchFilters(field, value) {\n    this.setState((state) => {\n      state.filter[field] = value;\n      return state;\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Search filter={this.state.filter} />\n        <Control onFiltersUpdated={this.updateSearchFilters} global={this.state} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App msg=\"hey there\" />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
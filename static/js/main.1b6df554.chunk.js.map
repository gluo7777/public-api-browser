{"version":3,"sources":["api/JsonUtil.js","components/Result.js","components/Detail.js","api/ComponentUtil.js","components/Search.js","components/Filter.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["FIELD","NAME","DESC","AUTH","HTTPS","CORS","LINK","CATEGORY","ResultList","props","react_default","a","createElement","id","className","payload","filter","result","search","RegExp","test","sectionsContainText","sort","r1","r2","s1","s2","toLowerCase","b","compareStrings","map","i","index","onRowClickedHandler","Result_Result","key","onRowClicked","buildParagraph","buildResultItem","text","section","matched","exec","match","spanList","prev","length","h","indexOf","t","push","buildSpan","buildSpanList","part","substring","Result","onClick","children","Detail","onBackBtnClicked","href","target","rel","debounce","component","callBack","delay","arguments","undefined","state","timeout","clearTimeout","setState","setTimeout","VIEW","DETAIL","LIST","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","results","searchText","mode","populateList","bind","assertThisInitialized","_ref","host","path","url","concat","https","cors","authentication","category","fetch","buildQueryUrl","res","json","entries","_this2","getListOfAPI","_this3","type","placeholder","onKeyUp","event","value","Result_ResultList","components_Detail","React","Component","Filter","options","label","Filter_CheckBox","defaultChecked","onValueChanged","onFiltersUpdated","Filter_Description","Filter_SelectList","defaultOptionValue","onChange","fn","CheckBox","checked","htmlFor","SelectList","selected","selectedOptions","option","Description","TabList","Control","activeTab","setActiveTab","tab","Control_Tabs","tabList","onTabSelected","Control_Content","global","Tabs","selectedTab","name","list","Control_Tab","tabName","onSelected","selectTab","generateTabList","Tab","Content","components_Filter","Control_Setting","onSettingsUpdated","setting","style","color","Setting","App","updateSearchFilters","field","Fragment","src_components_Search","src_components_Control","Boolean","window","location","hostname","ReactDOM","render","src_App_0","msg","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b6df554.chunk.js","sourcesContent":["const FIELD = {\n    NAME: 'API',\n    DESC: 'Description',\n    AUTH: 'Auth',\n    HTTPS: 'HTTPS',\n    CORS: 'Cors',\n    LINK: 'Link',\n    CATEGORY: 'Category'\n}\n\nexport default FIELD;","import './Result.css'\n// React requires this import\n// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport FIELD from '../api/JsonUtil'\n\nconst ResultList = (props) => (\n    <div id=\"results\" className=\"card\">\n        <ul className=\"list-group list-group-flush\">\n            {props.payload ? props.payload.filter(result => sectionsContainText(result, props.search))\n                /* Sort by ascending API names */\n                .sort((r1, r2) => compareStrings(r1[FIELD.NAME], r2[FIELD.NAME]))\n                .map((result, i) => buildResultItem(result, i, props.search, props.onRowClicked)) : null}\n        </ul>\n    </div>\n);\n\n/**\n * \n * @param {String} s1 \n * @param {String} s2 \n */\nfunction compareStrings(s1, s2) {\n    let a = s1.toLowerCase(), b = s2.toLowerCase();\n    if (a < b) return -1;\n    else if (a > b) return 1;\n    else return 0;\n}\n\nfunction sectionsContainText(result, search) {\n    let matcher = new RegExp(search, 'gi');\n    return matcher.test(result[FIELD.NAME] + result[FIELD.DESC] + result[FIELD.CATEGORY]);\n}\n\nfunction buildResultItem(result, index, search, onRowClickedHandler) {\n    return <Result key={index} onRowClicked={() => onRowClickedHandler(result)}>\n        {buildParagraph(result[FIELD.NAME], search, 'title')}\n        {buildParagraph(result[FIELD.DESC], search, 'description')}\n        {buildParagraph(result[FIELD.CATEGORY], search, 'category')}\n    </Result>;\n}\n\nfunction buildParagraph(text, search, section) {\n    let matcher = new RegExp(search, 'gi');\n    let matched = matcher.exec(text);\n    return <p className={section}>{matched ? buildSpanList(text, matched) : text}</p>;\n}\n\nfunction buildSpanList(text, match) {\n    const spanList = [];\n    let prev = -1;\n    for (let i = 0; i < match.length; i++) {\n        let h = text.indexOf(match[i]);\n        let t = h + match[i].length - 1;\n        if (prev + 1 < h) {\n            spanList.push(buildSpan(text, false, prev + 1, h, spanList.length));\n        }\n        spanList.push(buildSpan(text, true, h, t + 1, spanList.length));\n        prev = t;\n    }\n    if (prev + 1 < text.length) {\n        spanList.push(buildSpan(text, false, prev + 1, text.length, spanList.length));\n    }\n    return spanList;\n}\n\nfunction buildSpan(text, matched, h, t, index) {\n    let part = text.substring(h, t);\n    return <span key={index} className={matched ? \"highlight\" : \"\"}>{part}</span>;\n}\n\nconst Result = (props) => (\n    <li className=\"list-group-item\">\n        <div className=\"result h-pane\" onClick={props.onRowClicked}>\n            {props.children}\n        </div>\n    </li>\n);\n\nexport { Result, ResultList };","// React requires this import\n// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport FIELD from '../api/JsonUtil'\n\nconst Detail = (props) => (\n    <div className=\"card\">\n        <div className=\"card-header\">\n            <button className=\"btn btn-primary\" onClick={props.onBackBtnClicked}>Back</button>\n        </div>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.result[FIELD.NAME]}</h5>\n            <p className=\"card-text\">{props.result[FIELD.DESC]}</p>\n            <table className=\"table table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Category</td>\n                        <td>{props.result[FIELD.CATEGORY]}</td>\n                    </tr>\n                    <tr>\n                        <td>HTTPS</td>\n                        <td>{props.result[FIELD.HTTPS] ? 'yes' : 'no'}</td>\n                    </tr>\n                    <tr>\n                        <td>CORS</td>\n                        <td>{props.result[FIELD.CORS]}</td>\n                    </tr>\n                    <tr>\n                        <td>Authentication</td>\n                        <td>{props.result[FIELD.AUTH] !== '' ? props.result[FIELD.AUTH] : 'None'}</td>\n                    </tr>\n                    <tr>\n                        <td>Link</td>\n                        <td>\n                            {/* See: https://mathiasbynens.github.io/rel-noopener} */}\n                            <a href={props.result[FIELD.LINK]} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {props.result[FIELD.LINK]}\n                            </a></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n);\n\nexport default Detail;","/**\n * \n * @param {React.Component} component \n * @param {Function} callBack \n * @param {Number} delay \n */\nfunction debounce(component, callBack, delay = 1000) {\n    if (component.state.timeout) clearTimeout(component.state.timeout);\n    component.setState({\n        timeout: setTimeout(callBack, delay)\n    });\n}\n\nexport default debounce;","import React from 'react'\nimport './Search.css'\nimport { ResultList } from './Result'\nimport Detail from './Detail'\nimport debounce from '../api/ComponentUtil'\n\nconst API_URL = 'https://api.publicapis.org';\n\nconst VIEW = {\n    DETAIL: 'view_detail',\n    LIST: 'view_list',\n};\n\n// type-ahead delay\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: null,\n            result: null,\n            searchText: '',\n            mode: VIEW.LIST,\n            timeout: null\n        };\n        this.populateList = this.populateList.bind(this);\n    }\n    // load result list immediately\n    componentDidMount() {\n        this.populateList(this.props.filter, '');\n    }\n    // updates result list when filter settings have changed\n    componentWillReceiveProps({ filter }) {\n        this.populateList(filter, this.state.searchText);\n    }\n    // apply filter settings\n    buildQueryUrl(host, path, filter) {\n        let url = `${host}/${path}`;\n        url += `?https=${filter.https}`;\n        if (filter.cors) url += '&cors=yes';\n        if (filter.authentication !== 'none') url += `&auth=${filter.authentication}`;\n        if (filter.category) url += `&category=${filter.category}`;\n        return url;\n    }\n    async getListOfAPI(filter, text) {\n        // HTTP request to get json list\n        let res = await fetch(this.buildQueryUrl(API_URL, 'entries', filter));\n        let json = await res.json();\n        this.setState({ results: json.entries, searchText: text });\n    }\n    // applies debouncing to REST calls\n    populateList(filter, text) {\n        debounce(this, () => this.getListOfAPI(filter, text))\n    }\n\n    render() {\n        return (\n            <div id=\"search\" className=\"v-pane\">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"search-text\">Enter Text</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Type phrases to match title or description\" id=\"search-text\"\n                        onKeyUp={event => this.populateList(this.props.filter, event.target.value)}></input>\n                </div>\n                {\n                    // show details or list\n                    this.state.mode === VIEW.LIST ?\n                        <ResultList payload={this.state.results} search={this.state.searchText} onRowClicked={result => this.setState({ result: result, mode: VIEW.DETAIL })} />\n                        : <Detail result={this.state.result} onBackBtnClicked={() => this.setState({ mode: VIEW.LIST, result: null })} />\n                }\n            </div>\n        );\n    }\n}\nexport default Search;","// Specific Content Components\nimport React from 'react'\nimport debounce from '../api/ComponentUtil';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.options = [\n            { label: 'Any Authentication', value: 'none' },\n            { label: 'API Key', value: 'apikey' },\n            { label: 'OAuth', value: 'oauth' }\n        ];\n        this.state = {};\n    }\n    render() {\n        return (\n            <form>\n                <div className=\"form-group\">\n                    <CheckBox label=\"HTTPS\" defaultChecked={this.props.filter.https} onValueChanged={value => this.props.onFiltersUpdated('https', value)} />\n                    <CheckBox label=\"CORS\" defaultChecked={this.props.filter.cors} onValueChanged={value => this.props.onFiltersUpdated('cors', value)} />\n                    <Description text=\"Filter on endpoints that are HTTPS/CORS enabled.\" />\n                </div>\n                <div className=\"form-group\">\n                    <SelectList\n                        options={this.options}\n                        defaultOptionValue={this.props.filter.authentication}\n                        onValueChanged={value => this.props.onFiltersUpdated('authentication', value)}\n                    />\n                    <Description text=\"What type of authentication is required?\" />\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"category-text\">Category</span>\n                        </div>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"text\" id=\"category-text\"\n                            value={this.props.filter.category}\n                            onChange={event => {\n                                let value = event.target.value;\n                                let fn = this.props.onFiltersUpdated('category', value);\n                                debounce(this, fn);\n                            }} />\n                    </div>\n                    <Description text=\"Include only this category. Not case sensitive.\" />\n                </div>\n            </form>\n        );\n    }\n}\n\n// Specific Form Components\nconst CheckBox = (props) => (\n    <div className=\"form-check form-check-inline\">\n        <input className=\"form-check-input\" checked={props.defaultChecked} type=\"checkbox\" id={props.label} onChange={(event) => props.onValueChanged(event.target.checked)} />\n        <label className=\"form-check-label\" htmlFor={props.label}>{props.label}</label>\n    </div>\n);\n\nconst SelectList = (props) => (\n    <select value={props.defaultOptionValue} className=\"form-control custom-select\" onChange={event => {\n        const list = event.target;\n        const selected = list.selectedOptions[0].value; // can only select up to 1 option\n        props.onValueChanged(selected);\n    }}>\n        {props.options.map((option, index) => <option key={index} value={option.value}>{option.label}</option>)}\n    </select>\n);\n\nconst Description = (props) => (\n    <small className=\"form-text text-muted\">{props.text}</small>\n);\n\nexport default Filter;","import './Control.css'\nimport React from 'react'\nimport Filter from './Filter'\n\n// Tabs\nconst FILTER = 'Filter';\nconst SETTING = 'Setting';\nconst TabList = [FILTER, SETTING];\n\n// Control Pane that wraps around tabs and their content\nclass Control extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: TabList[0]\n        }\n        this.setActiveTab = this.setActiveTab.bind(this);\n    }\n\n    setActiveTab(tab) {\n        this.setState({ activeTab: tab });\n    }\n\n    render() {\n        return (\n            <div id=\"control\" className=\"v-pane\">\n                <Tabs tabList={TabList} onTabSelected={this.setActiveTab} />\n                <Content activeTab={this.state.activeTab} onFiltersUpdated={this.props.onFiltersUpdated} global={this.props.global} />\n            </div>\n        );\n    }\n}\n\n// Tab components\nclass Tabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: props.tabList[0]\n        };\n    }\n    selectTab(name) {\n        this.props.onTabSelected(name);\n        this.setState({ selectedTab: name });\n    }\n    generateTabList(list) {\n        return list.map((name, i) => <Tab\n            key={i}\n            tabName={name}\n            selectedTab={this.state.selectedTab}\n            onSelected={() => this.selectTab(name)}\n        />);\n    }\n    render() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                {this.generateTabList(this.props.tabList)}\n            </ul>\n        );\n    }\n}\n\nconst Tab = (props) => (\n    <li className=\"nav-item\">\n        <button className={`nav-link ${props.selectedTab === props.tabName ? 'active' : ''}`}\n            onClick={() => props.onSelected(props.tabName)}\n        >{props.tabName}</button>\n    </li>\n);\n\n// Tab Contents\nconst Content = (props) => {\n    switch (props.activeTab) {\n        case FILTER:\n            return <Filter onFiltersUpdated={props.onFiltersUpdated} filter={props.global.filter} />;\n        case SETTING:\n            return <Setting onSettingsUpdated={props.onSettingsUpdated} setting={props.global.setting} />;\n        default:\n            return (\n                <div>\n                    <h3 style={{ color: 'red' }}>Unable to display content.</h3>\n                </div>\n            );\n    }\n}\n\nconst Setting = () => (\n    <div>\n        <p>Setting under construction.</p>\n    </div>\n);\n\nexport default Control;","import React, { Component } from 'react';\nimport './App.css';\nimport Search from './components/Search'\nimport Control from './components/Control'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // global state\n    // should be passed down to all components under App\n    this.state = {\n      filter: {\n        https: true,\n        cors: false,\n        authentication: 'none',\n        category: ''\n      },\n      setting: {}\n    };\n    // bind callbacks to App context\n    this.updateSearchFilters = this.updateSearchFilters.bind(this);\n  }\n\n  updateSearchFilters(field, value) {\n    this.setState((state) => {\n      state.filter[field] = value;\n      return state;\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Search filter={this.state.filter} />\n        <Control onFiltersUpdated={this.updateSearchFilters} global={this.state} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App msg=\"hey there\" />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}